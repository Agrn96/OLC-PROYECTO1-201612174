package Analizador;
import java_cup.runtime.*;
import Automata.*;
import olc1_proyecto1_201612174.*;

parser code
{:
    public void syntax_error(Symbol s){
        System.out.println("Error sintactico "+s.value);
    }
    
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
         System.out.println("Error unrecovered "+s.value);
    }
:}

terminal String TK_CONJ,TK_DIGIT ;
terminal String TK_LETTERS, TK_DPORCENTAJE;
terminal String TK_ID, TK_PC;
terminal String TK_CP, TK_CK;
terminal String TK_OR, TK_I;
terminal String TK_P, TK_V;
terminal String TK_ESPECIALES;
terminal String TK_LLAVEIZ, TK_LLAVED;
terminal String TK_CADENA, TK_ASIGNACION;
terminal String TK_DOS_P, TK_SIMBOLOS;
terminal String TK_COMENT, TK_COM_MTL;
terminal String TK_CONJUNTO, TK_LISTA_SIMBOLOS;



non terminal ini;
non terminal inicio1;
non terminal inicio;
non terminal comentarios2;
non terminal instructions;
non terminal conjuntos;
non terminal expresion_regular;
non terminal Nodo expresion;
non terminal validar_cadena;

start with ini;
ini::=
    
    inicio1
    |error
;

inicio1::=
            TK_LLAVEIZ inicio  TK_LLAVED inicio1
            |TK_LLAVEIZ inicio  TK_LLAVED
            |comentarios2 inicio1
            |comentarios2
;
inicio::=
         instructions  inicio
        |  instructions 
; 

comentarios2 ::=       
             TK_COMENT:c {: System.out.println("Comentario: "+c); :} 
             |TK_COM_MTL:c {: System.out.println("Comentario: "+c); :} 
;    
instructions::=
        TK_COMENT:c {: System.out.println("Comentario: "+c); :}
        |conjuntos TK_PC
        |TK_DPORCENTAJE 
        |expresion_regular TK_PC
        |validar_cadena TK_PC
        |TK_COM_MTL:c {: System.out.println("Comentario: "+c); :} 
;

conjuntos::=
       TK_CONJ TK_DOS_P  TK_ID TK_ASIGNACION TK_SIMBOLOS:a  TK_V TK_SIMBOLOS:c {: System.out.println(a+"~"+c); :}
       | TK_CONJ TK_DOS_P  TK_ID TK_ASIGNACION TK_LETTERS:a TK_V TK_LETTERS:c {: System.out.println(a+"~"+c); :}
       | TK_CONJ TK_DOS_P  TK_ID TK_ASIGNACION TK_DIGIT:a TK_V TK_DIGIT:c {: System.out.println(a+"~"+c); :}
       |   TK_CONJ TK_DOS_P  TK_ID TK_ASIGNACION TK_LISTA_SIMBOLOS:c {: System.out.println("conjunto: "+c); :}
;



expresion_regular::=
    TK_ID:i TK_ASIGNACION expresion:a {: Nodo raiz;
                                       raiz=new Nodo(a,".",new Nodo(null,"#",null));
                                       Arbol arbol=new Arbol(raiz);
                                       arbol.setName(i);
                                       OLC1_PROYECTO1_201612174.arboles.add(arbol);
                                     :}
;

expresion::=
    TK_P expresion:a expresion:b {: RESULT=new Nodo(a,".",b); :}
    | TK_OR expresion:a expresion:b {: RESULT=new Nodo(a,"\\|",b); :}
    |TK_CP expresion:a {: RESULT=new Nodo(a,"+",null); :}
    | TK_CK expresion:a  {: RESULT=new Nodo(a,"*",null); :}
    | TK_I expresion:a {: RESULT=new Nodo(a,"?",null); :}  
    |TK_CONJUNTO:a {: RESULT=new Nodo(null,a,null); :}
    |TK_ESPECIALES:a {: RESULT=new Nodo(null,a,null); :}
    |TK_CADENA:a {: RESULT=new Nodo(null,a,null); :}
   
;

validar_cadena::=
    TK_ID TK_DOS_P TK_CADENA
;